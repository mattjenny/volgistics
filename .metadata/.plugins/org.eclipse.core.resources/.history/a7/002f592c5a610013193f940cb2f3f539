import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;

public class CSVParser {
	
	private CSVReader reader = null;
	private List<CSVEntry> entries = null;
	private List<String[]> entryValues = new ArrayList<String[]>();
	private String[] headings;
	//private Map<String, String> coVolunteers = new HashMap<String, String>();
	private List<String[]> coVolunteers = new ArrayList<String[]>();
	private int drivingIndex = -1;
	private int notesIndex = -1;

	public CSVParser(String filename) {
		try {
			reader = new CSVReader(new FileReader(filename), ',');
			System.out.println("File read.");
			headings = reader.readNext();
			for (int i=0; i<headings.length; i++) {
				System.out.println("Heading: " + headings[i]);
				if (headings[i].equals("can_drive_carpool")) {
					drivingIndex = i;
					headings[i] = "seats";
				} else if (headings[i].equals("notes")) {
					notesIndex = i;
				}
			}
			parseCSV();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void parseCSV() {
		
		ArrayList<CSVEntry> entries = new ArrayList<CSVEntry>();
		String[] nextLine = {""};
		String[] currentFields = {""};
		boolean isFirst = true;
		try {
			while((nextLine = reader.readNext()) != null) {
				if (!nextLine[0].equals("")) {
					if (!isFirst) {
						processCurrentFields(currentFields);
						entries.add(new CSVEntry(headings, currentFields));
						entryValues.add(currentFields);
					}
					else isFirst = false;
					currentFields = nextLine;
				} else {
					for (int i=0; i<nextLine.length; i++) {
						if (nextLine[i].equals("")) continue;
						currentFields[i] += " " + nextLine[i];
					}
				}
			}
			processCurrentFields(currentFields);
			entries.add(new CSVEntry(headings, currentFields));
			entryValues.add(currentFields);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		this.entries = entries;
	}
	
	public void processCurrentFields(String[] fields) {
		
		if (drivingIndex >= 0) {
			
			String s = fields[drivingIndex];
			if (s.contains("Yes")) {
				fields[drivingIndex] = s.charAt(5) + "";
			} else {
				fields[drivingIndex] = "0";
			}
		}
		if (notesIndex >= 0) {
			String notes = fields[notesIndex];
			int coVolunteerIndex = notes.indexOf("Co-Volunteers");
			if (coVolunteerIndex>=0) {
				String covs = notes.substring(coVolunteerIndex + 13);
				int availabilityIndex;
				if ((availabilityIndex = covs.indexOf("Availability")) >= 0) {
					covs = covs.substring(0, availabilityIndex);
				}
				String[] covPair = {fields[0] + ", " + fields[1], covs};
				coVolunteers.add(covPair);
			}
		}
	}
	
	public List<CSVEntry> getEntries() {
		return entries;
	}
	
	public void writeBetterCSV(String filename) {
		try {
			CSVWriter writer = new CSVWriter(new FileWriter(filename+".csv"), ',');
			writer.writeNext(headings);
			writer.writeAll(entryValues);
			writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		try {
			CSVWriter writer = new CSVWriter(new FileWriter(filename+"-covs.csv"), ',');
			String[] covsHead = {"name", "co-volunteers"};
			writer.writeNext(covsHead);
			writer.writeAll(coVolunteers);
			writer.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public class CSVEntry {
		
		ArrayList<CSVField> fields = new ArrayList<CSVField>();
		
		public CSVEntry(String[] names, String[] values) {
			if (names.length == values.length) {
				for (int i=0; i<names.length; i++) {
					fields.add(new CSVField(names[i], values[i]));
				}
			}
		}
		
		public ArrayList<CSVField> getFields() {
			return fields;
		}
	}
	
	public class CSVField {
		
		private String name;
		private String value;
		
		public CSVField(String name, String value) {
			this.name = name;
			this.value = value;
		}
		
		public String getName() {
			return name;
		}
		
		public String getValue() {
			return value;
		}
	}
	
	public static void main(String[] args) {
		CSVParser parser = new CSVParser("/Users/mjenny/Documents/test-volunteers3.csv");
		List<CSVEntry> entries = parser.getEntries();
		for (int i=0; i<10; i++) {
			System.out.println("*****");
			CSVEntry entry = entries.get(i);
			for (CSVField field: entry.getFields()) {
				System.out.println(field.getName() + ": " + field.getValue());
			}
		}
		parser.writeBetterCSV("/Users/mjenny/Documents/test-volunteers-better4");
	}
}
